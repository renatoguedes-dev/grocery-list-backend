// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String      @id @default(uuid())
  name           String
  email          String      @unique
  password       String
  inventoryItems Inventory[]
  lists          List[]
  createdAt      DateTime    @default(now()) @map("created_at")
  updatedAt      DateTime    @updatedAt @map("updated_at")

  @@map("users")
}

model Inventory {
  id            String   @id @default(uuid())
  user          User     @relation(fields: [userId], references: [id])
  userId        String   @map("user_id")
  item          String
  currentAmount Int      @map("current_amount")
  minimumAmount Int      @map("minimum_amount")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  @@map("inventory")
}

model List {
  id        String     @id @default(uuid())
  user      User       @relation(fields: [userId], references: [id])
  userId    String     @map("user_id")
  name      String
  date      DateTime
  active    Boolean    @default(true)
  listItems ListItem[]
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")

  @@map("lists")
}

model ListItem {
  id        String   @id @default(uuid())
  list      List     @relation(fields: [listId], references: [id], onDelete: Cascade)
  listId    String   @map("list_id")
  name      String
  amount    Int
  complete  Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("list_items")
}
